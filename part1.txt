========================================Solution to 1.1: Getting started========================================
# Start 3 containers from image that does not automatically exit, such as nginx, detached.
Terminal 1: % docker container run nginx
Terminal 2: % docker container run httpd
Terminal 3: % docker container run zookeeper
Terminal 4: % docker container ps -a
CONTAINER ID   IMAGE       COMMAND                  CREATED              STATUS              PORTS                                    NAMES
622bb8f53a4c   httpd       "httpd-foreground"       About a minute ago   Up About a minute   80/tcp                                   elastic_rhodes
bf18afc1b0fb   zookeeper   "/docker-entrypoint.…"   About a minute ago   Up About a minute   2181/tcp, 2888/tcp, 3888/tcp, 8080/tcp   stupefied_leavitt
943f1374f6a3   nginx       "/docker-entrypoint.…"   4 minutes ago        Up 4 minutes        80/tcp                                   nice_nightingale

# Stop 2 of the containers leaving 1 up.
Terminal 4: % docker container stop 622bb8f53a4c
Terminal 4: % docker container stop bf18afc1b0fb

# Submit the output for docker ps -a which shows 2 stopped containers and one running.
Terminal 4: % docker container ps -a
CONTAINER ID   IMAGE       COMMAND                  CREATED         STATUS                        PORTS     NAMES
622bb8f53a4c   httpd       "httpd-foreground"       4 minutes ago   Exited (0) 47 seconds ago               elastic_rhodes
bf18afc1b0fb   zookeeper   "/docker-entrypoint.…"   4 minutes ago   Exited (143) 36 seconds ago             stupefied_leavitt
943f1374f6a3   nginx       "/docker-entrypoint.…"   7 minutes ago   Up 7 minutes                  80/tcp    nice_nightingale

========================================Solution to 1.2: Cleanup========================================
# Clean the docker daemon from all images and containers.
Terminal 4: % docker container stop 943f1374f6a3
Terminal 4: % docker container prune

Terminal 4: % docker images
REPOSITORY   TAG       IMAGE ID       CREATED      SIZE
zookeeper    latest    043d5ff52cc5   5 days ago   278MB
httpd        latest    d54056386fbb   6 days ago   138MB
nginx        latest    87a94228f133   7 days ago   133MB
Terminal 4: % docker image rm 043d5ff52cc5 d54056386fbb 87a94228f133

# Submit the output for docker ps -a and docker images
Terminal 4: % docker container ps -a
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
Terminal 4: % docker images
REPOSITORY   TAG       IMAGE ID   CREATED   SIZE

========================================Solution to 1.3: Secret message========================================
Image devopsdockeruh/simple-web-service:ubuntu will start a container that outputs logs into a file.
Go inside the container and use tail -f ./text.log to follow the logs.
Every 10 seconds the clock will send you a “secret message”.
Submit the secret message and command(s) given as your answer.

# Start a container with the name of exercise13; -i (interactive), -t (tty) and -d (detached)
% docker run -d --name exercise13 devopsdockeruh/simple-web-service:ubuntu

# Enter in the container created above
% docker exec -it exercise13 sh
# tail -f ./text.log
Secret message is: 'You can find the source code here: https://github.com/docker-hy'
2021-10-19 14:14:07 +0000 UTC
2021-10-19 14:14:09 +0000 UTC
2021-10-19 14:14:11 +0000 UTC
2021-10-19 14:14:13 +0000 UTC
2021-10-19 14:14:15 +0000 UTC
Secret message is: 'You can find the source code here: https://github.com/docker-hy'
2021-10-19 14:14:17 +0000 UTC
2021-10-19 14:14:19 +0000 UTC
2021-10-19 14:14:20 +0000 UTC
2021-10-19 14:14:23 +0000 UTC
2021-10-19 14:14:25 +0000 UTC
Secret message is: 'You can find the source code here: https://github.com/docker-hy'

========================================Solution to 1.4: Missing dependencies========================================
# Start a ubuntu image with the process sh -c 'echo "Input website:"; read website; echo "Searching.."; sleep 1; curl http://$website;'
# Test inputting helsinki.fi into the application; and fix the ensuing problems.
% docker run -d -it --name exercise14 ubuntu sh -c 'apt-get update; apt-get install curl -y; echo "Input website:"; read website; echo "Searching.."; sleep 1; curl -v http://$website;' ; docker attach exercise14
Input website:
www.helsinki.fi
Searching..
*   Trying 128.214.189.90:80...
* TCP_NODELAY set
* Connected to www.helsinki.fi (128.214.189.90) port 80 (#0)
> GET / HTTP/1.1
> Host: www.helsinki.fi
> User-Agent: curl/7.68.0
> Accept: */*
>
* Mark bundle as not supporting multiuse
< HTTP/1.1 301 Moved Permanently
< Date: Tue, 19 Oct 2021 14:48:24 GMT
< Server: Varnish
< X-Varnish: 53674057
< Location: https://www.helsinki.fi/
< Content-Length: 0
< Connection: keep-alive
<
* Connection #0 to host www.helsinki.fi left intact